shadow$provide.module$node_modules$$moveable$matrix$dist$matrix_cjs=function(global,require,module,exports){function invert(matrix$jscomp$0,n){void 0===n&&(n=Math.sqrt(matrix$jscomp$0.length));matrix$jscomp$0=matrix$jscomp$0.slice();for(var inverseMatrix=createIdentityMatrix(n),i=0;i<n;++i){var startIndex=n*i,endIndex=n*(i+1),identityIndex=startIndex+i;if(0===matrix$jscomp$0[identityIndex])for(var j=i+1;j<n;++j)if(matrix$jscomp$0[n*j+i]){var matrix=matrix$jscomp$0,inverseMatrix$jscomp$0=inverseMatrix,
startIndex$jscomp$0=startIndex,endIndex$jscomp$0=endIndex;j*=n;for(var i$jscomp$0=startIndex$jscomp$0;i$jscomp$0<endIndex$jscomp$0;++i$jscomp$0){var v=matrix[i$jscomp$0],iv=inverseMatrix$jscomp$0[i$jscomp$0];matrix[i$jscomp$0]=matrix[j+i$jscomp$0-startIndex$jscomp$0];matrix[j+i$jscomp$0-startIndex$jscomp$0]=v;inverseMatrix$jscomp$0[i$jscomp$0]=inverseMatrix$jscomp$0[j+i$jscomp$0-startIndex$jscomp$0];inverseMatrix$jscomp$0[j+i$jscomp$0-startIndex$jscomp$0]=iv}break}if(matrix$jscomp$0[identityIndex])for(j=
matrix$jscomp$0,matrix=inverseMatrix,identityIndex=matrix$jscomp$0[identityIndex],inverseMatrix$jscomp$0=startIndex;inverseMatrix$jscomp$0<endIndex;++inverseMatrix$jscomp$0)j[inverseMatrix$jscomp$0]/=identityIndex,matrix[inverseMatrix$jscomp$0]/=identityIndex;else return[];for(j=0;j<n;++j)if(inverseMatrix$jscomp$0=n*j,endIndex$jscomp$0=matrix$jscomp$0[inverseMatrix$jscomp$0+i],0!==endIndex$jscomp$0&&i!==j)for(identityIndex=matrix$jscomp$0,endIndex=inverseMatrix,matrix=inverseMatrix$jscomp$0,inverseMatrix$jscomp$0+=
n,startIndex$jscomp$0=startIndex,endIndex$jscomp$0=-endIndex$jscomp$0,i$jscomp$0=matrix;i$jscomp$0<inverseMatrix$jscomp$0;++i$jscomp$0)identityIndex[i$jscomp$0]+=identityIndex[startIndex$jscomp$0+i$jscomp$0-matrix]*endIndex$jscomp$0,endIndex[i$jscomp$0]+=endIndex[startIndex$jscomp$0+i$jscomp$0-matrix]*endIndex$jscomp$0}return inverseMatrix}function transpose(matrix,n){void 0===n&&(n=Math.sqrt(matrix.length));for(var newMatrix=[],i=0;i<n;++i)for(var j=0;j<n;++j)newMatrix[j*n+i]=matrix[n*i+j];return newMatrix}
function convertPositionMatrix(matrix,n){var newMatrix=matrix.slice();for(matrix=matrix.length;matrix<n-1;++matrix)newMatrix[matrix]=0;newMatrix[n-1]=1;return newMatrix}function convertDimension(matrix,n,m){void 0===n&&(n=Math.sqrt(matrix.length));if(n===m)return matrix;for(var newMatrix=createIdentityMatrix(m),length=Math.min(n,m),i=0;i<length-1;++i){for(var j=0;j<length-1;++j)newMatrix[i*m+j]=matrix[i*n+j];newMatrix[(i+1)*m-1]=matrix[(i+1)*n-1];newMatrix[(m-1)*m+i]=matrix[(n-1)*n+i]}newMatrix[m*
m-1]=matrix[n*n-1];return newMatrix}function multiply(matrix,matrix2,n){var newMatrix=[],m=matrix.length/n,k=matrix2.length/m;if(!m)return matrix2;if(!k)return matrix;for(var i=0;i<n;++i)for(var j=0;j<k;++j)for(var l=newMatrix[i*k+j]=0;l<m;++l)newMatrix[i*k+j]+=matrix[i*m+l]*matrix2[l*k+j];return newMatrix}function caculate(matrix,matrix2,n){void 0===n&&(n=matrix2.length);matrix=multiply(matrix,matrix2,n);var k=matrix[n-1];return matrix.map(function(v){return v/k})}function createRotateMatrix(rad,
n){var cos=Math.cos(rad);rad=Math.sin(rad);var m=createIdentityMatrix(n);m[0]=cos;m[1]=-rad;m[n]=rad;m[n+1]=cos;return m}function createIdentityMatrix(n){for(var length=n*n,matrix=[],i=0;i<length;++i)matrix[i]=i%(n+1)?0:1;return matrix}exports.average=function(){for(var nums=[],_i=0;_i<arguments.length;_i++)nums[_i]=arguments[_i];_i=nums.length;for(var total=0,i=_i-1;0<=i;--i)total+=nums[i];return _i?total/_i:0};exports.caculate=caculate;exports.convertCSStoMatrix=function(a){return 6===a.length?
[a[0],a[2],a[4],a[1],a[3],a[5],0,0,1]:transpose(a)};exports.convertDimension=convertDimension;exports.convertMatrixtoCSS=function(a){return 9===a.length?[a[0],a[3],a[1],a[4],a[2],a[5]]:transpose(a)};exports.convertPositionMatrix=convertPositionMatrix;exports.createIdentityMatrix=createIdentityMatrix;exports.createOriginMatrix=function(origin,n){for(var m=createIdentityMatrix(n),length=Math.min(origin.length,n-1),i=0;i<length;++i)m[n*(i+1)-1]=origin[i];return m};exports.createRotateMatrix=createRotateMatrix;
exports.createScaleMatrix=function(scale,n){for(var m=createIdentityMatrix(n),length=Math.min(scale.length,n-1),i=0;i<length;++i)m[(n+1)*i]=scale[i];return m};exports.createWarpMatrix=function(pos0,pos1,pos2,pos3,nextPos0,nextPos1,nextPos2,nextPos3){var x0=pos0[0];pos0=pos0[1];var x1=pos1[0];pos1=pos1[1];var x2=pos2[0];pos2=pos2[1];var x3=pos3[0],y3=pos3[1];pos3=nextPos0[0];nextPos0=nextPos0[1];var u1=nextPos1[0];nextPos1=nextPos1[1];var u2=nextPos2[0];nextPos2=nextPos2[1];var u3=nextPos3[0];nextPos3=
nextPos3[1];x0=invert([x0,pos0,1,0,0,0,-pos3*x0,-pos3*pos0,0,0,0,x0,pos0,1,-nextPos0*x0,-nextPos0*pos0,x1,pos1,1,0,0,0,-u1*x1,-u1*pos1,0,0,0,x1,pos1,1,-nextPos1*x1,-nextPos1*pos1,x2,pos2,1,0,0,0,-u2*x2,-u2*pos2,0,0,0,x2,pos2,1,-nextPos2*x2,-nextPos2*pos2,x3,y3,1,0,0,0,-u3*x3,-u3*y3,0,0,0,x3,y3,1,-nextPos3*x3,-nextPos3*y3],8);if(!x0.length)return[];x0=multiply(x0,[pos3,nextPos0,u1,nextPos1,u2,nextPos2,u3,nextPos3],8);x0[8]=1;return convertDimension(x0,3,4)};exports.getOrigin=function(matrix,n){void 0===
n&&(n=Math.sqrt(matrix.length));for(var originMatrix=[],i=0;i<n-1;++i)originMatrix[i]=matrix[(i+1)*n-1];originMatrix[n-1]=0;return originMatrix};exports.getRad=function(pos1,pos2){pos1=Math.atan2(pos2[1]-pos1[1],pos2[0]-pos1[0]);return 0<=pos1?pos1:pos1+2*Math.PI};exports.ignoreDimension=function(matrix,m,n){void 0===n&&(n=Math.sqrt(matrix.length));matrix=matrix.slice();for(var i=0;i<n;++i)matrix[i*n+m-1]=0,matrix[(m-1)*n+i]=0;matrix[(m-1)*(n+1)]=1;return matrix};exports.invert=invert;exports.minus=
function(pos1,pos2){var length=Math.min(pos1.length,pos2.length);pos1=pos1.slice();for(var i=0;i<length;++i)pos1[i]-=pos2[i];return pos1};exports.multiplies=function(n){for(var matrixes=[],_i=1;_i<arguments.length;_i++)matrixes[_i-1]=arguments[_i];var m=createIdentityMatrix(n);matrixes.forEach(function(matrix){m=multiply(m,matrix,n)});return m};exports.multiply=multiply;exports.multiplyCSS=function(matrix,matrix2,n){void 0===n&&(n=Math.sqrt(matrix.length));for(var newMatrix=[],m=matrix.length/n,k=
matrix2.length/m,i=0;i<n;++i)for(var j=0;j<k;++j)for(var l=newMatrix[i+j*k]=0;l<m;++l)newMatrix[i+j*k]+=matrix[i+l*m]*matrix2[l+j*k];return newMatrix};exports.plus=function(pos1,pos2){var length=Math.min(pos1.length,pos2.length);pos1=pos1.slice();for(var i=0;i<length;++i)pos1[i]+=pos2[i];return pos1};exports.rotate=function(pos,rad){return caculate(createRotateMatrix(rad,3),convertPositionMatrix(pos,3))};exports.sum=function(){for(var nums=[],_i=0;_i<arguments.length;_i++)nums[_i]=arguments[_i];_i=
0;for(var i=nums.length-1;0<=i;--i)_i+=nums[i];return _i};exports.transpose=transpose}
//# sourceMappingURL=module$node_modules$$moveable$matrix$dist$matrix_cjs.js.map
