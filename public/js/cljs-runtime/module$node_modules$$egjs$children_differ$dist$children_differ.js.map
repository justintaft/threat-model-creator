{
"version":3,
"file":"module$node_modules$$egjs$children_differ$dist$children_differ.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAS1H,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACL,QAAnB,GAAA,MAAOD,QAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DA,MAAAC,QAA/D,CAAgFC,OAAA,CAAQH,OAAA,CAAQ,wDAAR,CAAR,CAAhF,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAAC,IAAhC,CAA6CD,MAAA,CAAO,CAAC,mBAAD,CAAP,CAA8BD,OAA9B,CAA7C,EACCJ,MAAA,CAASA,MAAT,EAAmBO,IAAnB,CAA0BP,MAAAQ,GAAA,CAAYR,MAAAQ,GAAZ,EAAyB,EAAzB,CAA6BR,MAAAQ,GAAAC,eAA7B,CAAwDL,OAAA,CAAQJ,MAAAQ,GAAAE,WAAR,CADnF,CAFwB,CAA3B,CAAA,CAIC,IAJD,CAIO,QAAS,CAACA,UAAD,CAAa,CA8B1BC,QAASA,UAAS,CAACC,CAAD;AAAIC,CAAJ,CAAO,CAGvBC,QAASA,GAAE,EAAG,CACZ,IAAAC,YAAA,CAAmBH,CADP,CAFdI,aAAA,CAAcJ,CAAd,CAAiBC,CAAjB,CAMAD,EAAAK,UAAA,CAAoB,IAAN,GAAAJ,CAAA,CAAaK,MAAAC,OAAA,CAAcN,CAAd,CAAb,EAAiCC,EAAAG,UAAA,CAAeJ,CAAAI,UAAf,CAA4B,IAAIH,EAAjE,CAPS,CAZzB,IAAIE,cAAgBA,QAAS,CAACJ,UAAD,CAAIC,UAAJ,CAAO,CAClCG,aAAA,CAAgBE,MAAAE,eAAhB,EAAyC,CACvCC,UAAW,EAD4B,CAAzC,UAEaC,MAFb,EAEsB,QAAS,CAACV,CAAD,CAAIC,CAAJ,CAAO,CACpCD,CAAAS,UAAA,CAAcR,CADsB,CAFtC,EAIK,QAAS,CAACD,CAAD,CAAIC,CAAJ,CAAO,CACnB,IAAKU,IAAIA,CAAT,GAAcV,EAAd,CAAqBA,CAAAW,eAAA,CAAiBD,CAAjB,CAAJ,GAAyBX,CAAA,CAAEW,CAAF,CAAzB,CAAgCV,CAAA,CAAEU,CAAF,CAAhC,CADE,CAIrB,OAAOP,cAAA,CAAcJ,UAAd,CAAiBC,UAAjB,CAT2B,CAApC,CA2BIY,gBAAiC,UAAf,GAAA,MAAOC,IAAP,CAA4BC,IAAAA,EAA5B,CAAwC,QAAS,EAAG,CACxE,IAAIC,cAAgB,CACpB,OAAO,SAAS,CAACC,EAAD,CAAK,CACnB,MAAOA,GAAAC,aAAP;CAA2BD,EAAAC,aAA3B,CAA6C,EAAEF,aAA/C,CADmB,CAFmD,CAAZ,EA3B9D,CAyCInB,eAEJ,QAAS,CAACsB,MAAD,CAAS,CAOhBtB,QAASA,eAAc,CAACuB,IAAD,CAAO,CACf,IAAK,EAAlB,GAAIA,IAAJ,GACEA,IADF,CACS,EADT,CAIA,OAAOD,OAAAE,KAAA,CAAY,IAAZ,CAAkBD,IAAlB,CAAwBP,eAAxB,CAAP,EAAmD,IALvB,CAN9Bd,SAAA,CAAUF,cAAV,CAA0BsB,MAA1B,CAcA,OAAOtB,eAfS,CAAlB,CAgBEC,UAhBF,CA4EAD,eAAAyB,KAAA,CAfAA,QAAa,CAACC,QAAD,CAAWH,IAAX,CAAiB,CAC5B,MAAOtB,WAAAwB,KAAA,CAAgBC,QAAhB,CAA0BH,IAA1B,CAAgCP,eAAhC,CADqB,CAiB9B,OAAOhB,eA3ImB,CAJ7B,CAT0H;",
"sources":["node_modules/@egjs/children-differ/dist/children-differ.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$egjs$children_differ$dist$children_differ\"] = function(global,require,module,exports) {\n/*\nCopyright (c) 2019-present NAVER Corp.\nname: @egjs/children-differ\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-children-differ\nversion: 1.0.0\n*/\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@egjs/list-differ')) :\n    typeof define === 'function' && define.amd ? define(['@egjs/list-differ'], factory) :\n    (global = global || self, (global.eg = global.eg || {}, global.eg.ChildrenDiffer = factory(global.eg.ListDiffer)));\n}(this, function (ListDiffer) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\n\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return extendStatics(d, b);\n    };\n\n    function __extends(d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n\n    /*\n    egjs-children-differ\n    Copyright (c) 2019-present NAVER Corp.\n    MIT license\n    */\n    var findKeyCallback = typeof Map === \"function\" ? undefined : function () {\n      var childrenCount = 0;\n      return function (el) {\n        return el.__DIFF_KEY__ || (el.__DIFF_KEY__ = ++childrenCount);\n      };\n    }();\n\n    /**\n     * A module that checks diff when child are added, removed, or changed .\n     * @ko \uc790\uc2dd \ub178\ub4dc\ub4e4\uc5d0\uc11c \uc790\uc2dd \ub178\ub4dc\uac00 \ucd94\uac00\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uac70\ub098 \uc21c\uc11c\uac00 \ubcc0\uacbd\ub41c \uc0ac\ud56d\uc744 \uccb4\ud06c\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.\n     * @memberof eg\n     * @extends eg.ListDiffer\n     */\n\n    var ChildrenDiffer =\n    /*#__PURE__*/\n    function (_super) {\n      __extends(ChildrenDiffer, _super);\n      /**\n       * @param - Initializing Children <ko> \ucd08\uae30 \uc124\uc815\ud560 \uc790\uc2dd \ub178\ub4dc\ub4e4</ko>\n       */\n\n\n      function ChildrenDiffer(list) {\n        if (list === void 0) {\n          list = [];\n        }\n\n        return _super.call(this, list, findKeyCallback) || this;\n      }\n\n      return ChildrenDiffer;\n    }(ListDiffer);\n\n    /*\n    egjs-children-differ\n    Copyright (c) 2019-present NAVER Corp.\n    MIT license\n    */\n    /**\n     *\n     * @memberof eg.ChildrenDiffer\n     * @static\n     * @function\n     * @param - Previous List <ko> \uc774\uc804 \ubaa9\ub85d </ko>\n     * @param - List to Update <ko> \uc5c5\ub370\uc774\ud2b8 \ud560 \ubaa9\ub85d </ko>\n     * @return - Returns the diff between `prevList` and `list` <ko> `prevList`\uc640 `list`\uc758 \ub2e4\ub978 \uc810\uc744 \ubc18\ud658\ud55c\ub2e4.</ko>\n     * @example\n     * import { diff } from \"@egjs/children-differ\";\n     * // script => eg.ChildrenDiffer.diff\n     * const result = diff([0, 1, 2, 3, 4, 5], [7, 8, 0, 4, 3, 6, 2, 1]);\n     * // List before update\n     * // [1, 2, 3, 4, 5]\n     * console.log(result.prevList);\n     * // Updated list\n     * // [4, 3, 6, 2, 1]\n     * console.log(result.list);\n     * // Index array of values added to `list`\n     * // [0, 1, 5]\n     * console.log(result.added);\n     * // Index array of values removed in `prevList`\n     * // [5]\n     * console.log(result.removed);\n     * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`\n     * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n     * console.log(result.changed);\n     * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n     * // [[4, 3], [3, 4], [2, 6]]\n     * console.log(result.pureChanged);\n     * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n     * // [[4, 1], [4, 2], [4, 3]]\n     * console.log(result.ordered);\n     * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved\n     * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n     * console.log(result.maintained);\n     */\n\n    function diff(prevList, list) {\n      return ListDiffer.diff(prevList, list, findKeyCallback);\n    }\n\n    /*\n    egjs-children-differ\n    Copyright (c) 2019-present NAVER Corp.\n    MIT license\n    */\n\n    /*\n    egjs-children-differ\n    Copyright (c) 2019-present NAVER Corp.\n    MIT license\n    */\n    ChildrenDiffer.diff = diff;\n\n    return ChildrenDiffer;\n\n}));\n//# sourceMappingURL=children-differ.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","eg","ChildrenDiffer","ListDiffer","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","findKeyCallback","Map","undefined","childrenCount","el","__DIFF_KEY__","_super","list","call","diff","prevList"]
}
