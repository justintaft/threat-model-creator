{
"version":3,
"file":"module$node_modules$$egjs$list_differ$dist$list_differ.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@egjs/list-differ/dist/list-differ.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$egjs$list_differ$dist$list_differ\"] = function(global,require,module,exports) {\n/*\nCopyright (c) 2019-present NAVER Corp.\nname: @egjs/list-differ\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-list-differ\nversion: 1.0.0\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (global.eg = global.eg || {}, global.eg.ListDiffer = factory()));\n}(this, function () { 'use strict';\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n  var PolyMap =\n  /*#__PURE__*/\n  function () {\n    function PolyMap() {\n      this.keys = [];\n      this.values = [];\n    }\n\n    var __proto = PolyMap.prototype;\n\n    __proto.get = function (key) {\n      return this.values[this.keys.indexOf(key)];\n    };\n\n    __proto.set = function (key, value) {\n      var keys = this.keys;\n      var values = this.values;\n      var prevIndex = keys.indexOf(key);\n      var index = prevIndex === -1 ? keys.length : prevIndex;\n      keys[index] = key;\n      values[index] = value;\n    };\n\n    return PolyMap;\n  }();\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n  var HashMap =\n  /*#__PURE__*/\n  function () {\n    function HashMap() {\n      this.object = {};\n    }\n\n    var __proto = HashMap.prototype;\n\n    __proto.get = function (key) {\n      return this.object[key];\n    };\n\n    __proto.set = function (key, value) {\n      this.object[key] = value;\n    };\n\n    return HashMap;\n  }();\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n  var SUPPORT_MAP = typeof Map === \"function\";\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n  var Link =\n  /*#__PURE__*/\n  function () {\n    function Link() {}\n\n    var __proto = Link.prototype;\n\n    __proto.connect = function (prevLink, nextLink) {\n      this.prev = prevLink;\n      this.next = nextLink;\n      prevLink && (prevLink.next = this);\n      nextLink && (nextLink.prev = this);\n    };\n\n    __proto.disconnect = function () {\n      // In double linked list, diconnect the interconnected relationship.\n      var prevLink = this.prev;\n      var nextLink = this.next;\n      prevLink && (prevLink.next = nextLink);\n      nextLink && (nextLink.prev = prevLink);\n    };\n\n    __proto.getIndex = function () {\n      var link = this;\n      var index = -1;\n\n      while (link) {\n        link = link.prev;\n        ++index;\n      }\n\n      return index;\n    };\n\n    return Link;\n  }();\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n\n  function orderChanged(changed, fixed) {\n    // It is roughly in the order of these examples.\n    // 4, 6, 0, 2, 1, 3, 5, 7\n    var fromLinks = []; // 0, 1, 2, 3, 4, 5, 6, 7\n\n    var toLinks = [];\n    changed.forEach(function (_a) {\n      var from = _a[0],\n          to = _a[1];\n      var link = new Link();\n      fromLinks[from] = link;\n      toLinks[to] = link;\n    }); // `fromLinks` are connected to each other by double linked list.\n\n    fromLinks.forEach(function (link, i) {\n      link.connect(fromLinks[i - 1]);\n    });\n    return changed.filter(function (_, i) {\n      return !fixed[i];\n    }).map(function (_a, i) {\n      var from = _a[0],\n          to = _a[1];\n\n      if (from === to) {\n        return [0, 0];\n      }\n\n      var fromLink = fromLinks[from];\n      var toLink = toLinks[to - 1];\n      var fromIndex = fromLink.getIndex(); // Disconnect the link connected to `fromLink`.\n\n      fromLink.disconnect(); // Connect `fromLink` to the right of `toLink`.\n\n      if (!toLink) {\n        fromLink.connect(undefined, fromLinks[0]);\n      } else {\n        fromLink.connect(toLink, toLink.next);\n      }\n\n      var toIndex = fromLink.getIndex();\n      return [fromIndex, toIndex];\n    });\n  }\n\n  var Result =\n  /*#__PURE__*/\n  function () {\n    function Result(prevList, list, added, removed, changed, maintained, changedBeforeAdded, fixed) {\n      this.prevList = prevList;\n      this.list = list;\n      this.added = added;\n      this.removed = removed;\n      this.changed = changed;\n      this.maintained = maintained;\n      this.changedBeforeAdded = changedBeforeAdded;\n      this.fixed = fixed;\n    }\n\n    var __proto = Result.prototype;\n    Object.defineProperty(__proto, \"ordered\", {\n      get: function () {\n        if (!this.cacheOrdered) {\n          this.caculateOrdered();\n        }\n\n        return this.cacheOrdered;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(__proto, \"pureChanged\", {\n      get: function () {\n        if (!this.cachePureChanged) {\n          this.caculateOrdered();\n        }\n\n        return this.cachePureChanged;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    __proto.caculateOrdered = function () {\n      var ordered = orderChanged(this.changedBeforeAdded, this.fixed);\n      var changed = this.changed;\n      var pureChanged = [];\n      this.cacheOrdered = ordered.filter(function (_a, i) {\n        var from = _a[0],\n            to = _a[1];\n        var _b = changed[i],\n            fromBefore = _b[0],\n            toBefore = _b[1];\n\n        if (from !== to) {\n          pureChanged.push([fromBefore, toBefore]);\n          return true;\n        }\n      });\n      this.cachePureChanged = pureChanged;\n    };\n\n    return Result;\n  }();\n\n  /**\n   *\n   * @memberof eg.ListDiffer\n   * @static\n   * @function\n   * @param - Previous List <ko> \uc774\uc804 \ubaa9\ub85d </ko>\n   * @param - List to Update <ko> \uc5c5\ub370\uc774\ud2b8 \ud560 \ubaa9\ub85d </ko>\n   * @param - This callback function returns the key of the item. <ko> \uc544\uc774\ud15c\uc758 \ud0a4\ub97c \ubc18\ud658\ud558\ub294 \ucf5c\ubc31 \ud568\uc218\uc785\ub2c8\ub2e4.</ko>\n   * @return - Returns the diff between `prevList` and `list` <ko> `prevList`\uc640 `list`\uc758 \ub2e4\ub978 \uc810\uc744 \ubc18\ud658\ud55c\ub2e4.</ko>\n   * @example\n   * import { diff } from \"@egjs/list-differ\";\n   * // script => eg.ListDiffer.diff\n   * const result = diff([0, 1, 2, 3, 4, 5], [7, 8, 0, 4, 3, 6, 2, 1], e => e);\n   * // List before update\n   * // [1, 2, 3, 4, 5]\n   * console.log(result.prevList);\n   * // Updated list\n   * // [4, 3, 6, 2, 1]\n   * console.log(result.list);\n   * // Index array of values added to `list`\n   * // [0, 1, 5]\n   * console.log(result.added);\n   * // Index array of values removed in `prevList`\n   * // [5]\n   * console.log(result.removed);\n   * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.changed);\n   * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n   * // [[4, 3], [3, 4], [2, 6]]\n   * console.log(result.pureChanged);\n   * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n   * // [[4, 1], [4, 2], [4, 3]]\n   * console.log(result.ordered);\n   * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.maintained);\n   */\n\n  function diff(prevList, list, findKeyCallback) {\n    var mapClass = SUPPORT_MAP ? Map : findKeyCallback ? HashMap : PolyMap;\n\n    var callback = findKeyCallback || function (e) {\n      return e;\n    };\n\n    var added = [];\n    var removed = [];\n    var maintained = [];\n    var prevKeys = prevList.map(callback);\n    var keys = list.map(callback);\n    var prevKeyMap = new mapClass();\n    var keyMap = new mapClass();\n    var changedBeforeAdded = [];\n    var fixed = [];\n    var removedMap = {};\n    var changed = [];\n    var addedCount = 0;\n    var removedCount = 0; // Add prevKeys and keys to the hashmap.\n\n    prevKeys.forEach(function (key, prevListIndex) {\n      prevKeyMap.set(key, prevListIndex);\n    });\n    keys.forEach(function (key, listIndex) {\n      keyMap.set(key, listIndex);\n    }); // Compare `prevKeys` and `keys` and add them to `removed` if they are not in `keys`.\n\n    prevKeys.forEach(function (key, prevListIndex) {\n      var listIndex = keyMap.get(key); // In prevList, but not in list, it is removed.\n\n      if (typeof listIndex === \"undefined\") {\n        ++removedCount;\n        removed.push(prevListIndex);\n      } else {\n        removedMap[listIndex] = removedCount;\n      }\n    }); // Compare `prevKeys` and `keys` and add them to `added` if they are not in `prevKeys`.\n\n    keys.forEach(function (key, listIndex) {\n      var prevListIndex = prevKeyMap.get(key); // In list, but not in prevList, it is added.\n\n      if (typeof prevListIndex === \"undefined\") {\n        added.push(listIndex);\n        ++addedCount;\n      } else {\n        maintained.push([prevListIndex, listIndex]);\n        removedCount = removedMap[listIndex] || 0;\n        changedBeforeAdded.push([prevListIndex - removedCount, listIndex - addedCount]);\n        fixed.push(listIndex === prevListIndex);\n\n        if (prevListIndex !== listIndex) {\n          changed.push([prevListIndex, listIndex]);\n        }\n      }\n    }); // Sort by ascending order of 'to(list's index).\n\n    removed.reverse();\n    return new Result(prevList, list, added, removed, changed, maintained, changedBeforeAdded, fixed);\n  }\n\n  /**\n   * A module that checks diff when values are added, removed, or changed in an array.\n   * @ko \ubc30\uc5f4 \ub610\ub294 \uc624\ube0c\uc81d\ud2b8\uc5d0\uc11c \uac12\uc774 \ucd94\uac00\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uac70\ub098 \uc21c\uc11c\uac00 \ubcc0\uacbd\uc0ac\ud56d\uc744 \uccb4\ud06c\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.\n   * @memberof eg\n   */\n\n  var ListDiffer =\n  /*#__PURE__*/\n  function () {\n    /**\n     * @param - Initializing Data Array. <ko> \ucd08\uae30 \uc124\uc815\ud560 \ub370\uc774\ud130 \ubc30\uc5f4.</ko>\n     * @param - This callback function returns the key of the item. <ko> \uc544\uc774\ud15c\uc758 \ud0a4\ub97c \ubc18\ud658\ud558\ub294 \ucf5c\ubc31 \ud568\uc218\uc785\ub2c8\ub2e4.</ko>\n     * @example\n     * import ListDiffer from \"@egjs/list-differ\";\n     * // script => eg.ListDiffer\n     * const differ = new ListDiffer([0, 1, 2, 3, 4, 5], e => e);\n     * const result = differ.update([7, 8, 0, 4, 3, 6, 2, 1]);\n     * // List before update\n     * // [1, 2, 3, 4, 5]\n     * console.log(result.prevList);\n     * // Updated list\n     * // [4, 3, 6, 2, 1]\n     * console.log(result.list);\n     * // Index array of values added to `list`.\n     * // [0, 1, 5]\n     * console.log(result.added);\n     * // Index array of values removed in `prevList`.\n     * // [5]\n     * console.log(result.removed);\n     * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`.\n     * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n     * console.log(result.changed);\n     * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n     * // [[4, 3], [3, 4], [2, 6]]\n     * console.log(result.pureChanged);\n     * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n     * // [[4, 1], [4, 2], [4, 3]]\n     * console.log(result.ordered);\n     * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved.\n     * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n     * console.log(result.maintained);\n     */\n    function ListDiffer(list, findKeyCallback) {\n      if (list === void 0) {\n        list = [];\n      }\n\n      this.findKeyCallback = findKeyCallback;\n      this.list = [].slice.call(list);\n    }\n    /**\n     * Update list.\n     * @ko \ub9ac\uc2a4\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ub97c \ud569\ub2c8\ub2e4.\n     * @param - List to update <ko> \uc5c5\ub370\uc774\ud2b8\ud560 \ub9ac\uc2a4\ud2b8 </ko>\n     * @return - Returns the results of an update from `prevList` to `list`.<ko> `prevList`\uc5d0\uc11c `list`\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c \uacb0\uacfc\ub97c \ubc18\ud658\ud55c\ub2e4. </ko>\n     */\n\n\n    var __proto = ListDiffer.prototype;\n\n    __proto.update = function (list) {\n      var newData = [].slice.call(list);\n      var result = diff(this.list, newData, this.findKeyCallback);\n      this.list = newData;\n      return result;\n    };\n\n    return ListDiffer;\n  }();\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n\n  /*\n  egjs-list-differ\n  Copyright (c) 2019-present NAVER Corp.\n  MIT license\n  */\n  ListDiffer.diff = diff;\n\n  return ListDiffer;\n\n}));\n//# sourceMappingURL=list-differ.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","eg","ListDiffer","orderChanged","changed","fixed","fromLinks","toLinks","forEach","_a","from","to","link","Link","i","connect","filter","_","map","fromLink","toLink","fromIndex","getIndex","disconnect","next","undefined","toIndex","diff","prevList","list","findKeyCallback","mapClass","SUPPORT_MAP","Map","HashMap","PolyMap","callback","e","added","removed","maintained","prevKeys","keys","prevKeyMap","keyMap","changedBeforeAdded","removedMap","addedCount","removedCount","key","prevListIndex","set","listIndex","get","push","reverse","Result","values","__proto","prototype","__proto.get","indexOf","__proto.set","value","prevIndex","index","length","object","__proto.connect","prevLink","nextLink","prev","__proto.disconnect","__proto.getIndex","Object","defineProperty","cacheOrdered","caculateOrdered","enumerable","configurable","cachePureChanged","__proto.caculateOrdered","ordered","pureChanged","_b","fromBefore","toBefore","slice","call","update","__proto.update","newData","result"]
}
